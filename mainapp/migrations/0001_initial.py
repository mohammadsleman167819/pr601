# Generated by Django 5.0.3 on 2024-04-03 23:46

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Employee', 'Employee'), ('Company', 'Company')], max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(help_text='Company Name', max_length=100)),
                ('city', models.CharField(help_text='Company City', max_length=100)),
                ('phone', models.CharField(help_text='Company Phone', max_length=20)),
            ],
            options={
                'verbose_name': 'Company',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('firstname', models.CharField(help_text='Employee First Name', max_length=100, verbose_name='First Name')),
                ('lastname', models.CharField(help_text='Employee Last Name', max_length=100, verbose_name='Last Name')),
                ('dateOfBirth', models.DateField(help_text='Employee Date of Birth', verbose_name='Date Of Birth')),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=8)),
                ('city', models.CharField(help_text='Employee City', max_length=50)),
                ('phone', models.CharField(help_text='Employee Phone', max_length=20)),
                ('education', models.TextField(blank=True, max_length=1000, null=True)),
                ('experience', models.TextField(blank=True, max_length=1000, null=True)),
                ('awards', models.TextField(blank=True, max_length=1000, null=True)),
                ('hobbies', models.TextField(blank=True, max_length=1000, null=True)),
                ('skills', models.TextField(max_length=1000)),
                ('references', models.TextField(blank=True, max_length=1000, null=True)),
                ('other', models.TextField(blank=True, max_length=1000, null=True)),
                ('cluster', models.IntegerField(blank=True, null=True)),
                ('clusterable_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Employee',
            },
        ),
        migrations.CreateModel(
            name='Job_Post',
            fields=[
                ('job_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('job_title', models.CharField(max_length=50)),
                ('jobDescription', models.TextField(max_length=1000, verbose_name='Job Description')),
                ('workhours', models.TextField(max_length=1000, verbose_name='Work Hours')),
                ('contact', models.CharField(max_length=50, verbose_name='Contact')),
                ('city', models.CharField(max_length=50)),
                ('salary', models.CharField(max_length=50)),
                ('cluster', models.IntegerField(blank=True, null=True)),
                ('added_date', models.DateField(auto_now_add=True)),
                ('clusterable_text', models.TextField(blank=True, null=True)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.company')),
            ],
            options={
                'verbose_name': 'Job Post',
                'ordering': ['-added_date'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('courseTitle', models.CharField(max_length=50, verbose_name='Course Title')),
                ('description', models.TextField(max_length=1000, verbose_name='Course Description')),
                ('link', models.CharField(max_length=100, verbose_name='Course Link')),
                ('cluster', models.IntegerField(blank=True, null=True)),
                ('clusterable_text', models.TextField(blank=True, null=True)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.company')),
            ],
            options={
                'verbose_name': 'Course',
                'ordering': ['company_id'],
            },
        ),
    ]
